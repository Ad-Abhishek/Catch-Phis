version: "3.9"


services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"

    image: catch_phis:v1.0

    volumes:
     - ./app:/app
    command: >
     sh -c "python3 manage.py wait_for_db && 
            python3 manage.py migrate &&
            python3 manage.py runserver 0.0.0.0:8000"
    env_file:
      - .container.env
    depends_on:
      - db
      - rabbitmq
      - redis
      - celery
  db:
    image: postgres:13-alpine
    command: postgres -c max_connections=500
    shm_size: 1g
    volumes:
      - dev-db-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    container_name: "catch_phis"
    env_file:
      - .container.env
  celery:
    build: .
    command: celery --app=config.settings worker --loglevel=info --beat
    volumes:
      - ./app:/app
    depends_on:
      - rabbitmq
    env_file:
      - .container.env
  redis:
    image: 'redis:alpine'
  rabbitmq:
    image: 'rabbitmq'
    command: rabbitmq-server
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .container.env
  nginx:
    image: nginx:stable-alpine3.20-perl
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./app/staticfiles:/app/staticfiles
    ports:
      - "80:80"
    depends_on:
      - app


volumes:
  dev-db-data: